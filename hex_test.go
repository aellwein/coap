package coap

import (
	c "github.com/smartystreets/goconvey/convey"
	"testing"
)

func TestDumpInGoFormat(t *testing.T) {
	c.Convey("Given a byte array", t, func() {

		b := []byte{
			0x13, 0x37, 0xDE, 0xAD, 0xBE, 0xEF, 0xCA, 0xFE, 0xBA, 0xBE,
			0x13, 0x37, 0xDE, 0xAD, 0xBE, 0xEF, 0xCA, 0xFE, 0xBA, 0xBE,
		}

		c.Convey("When dumped in go format", func() {

			s := DumpInGoFormat(b)

			c.Convey("Then the result is equal the expected string", func() {
				expected := "[]byte{\n 0x13, 0x37, 0xDE, 0xAD, 0xBE, 0xEF, 0xCA, 0xFE, 0xBA, 0xBE, 0x13, 0x37, 0xDE, 0xAD, 0xBE, 0xEF,\n 0xCA, 0xFE, 0xBA, 0xBE,\n}"
				c.So(s, c.ShouldEqual, expected)
			})
		})
	})
}

func TestHexContent(t *testing.T) {
	c.Convey("Given a byte array", t, func() {
		b := []byte{
			0x13, 0x37, 0xDE, 0xAD, 0xBE, 0xEF, 0xCA, 0xFE, 0xBA, 0xBE,
			0x13, 0x37, 0xDE, 0xAD, 0xBE, 0xEF, 0xCA, 0xFE, 0xBA, 0xBE,
		}

		c.Convey("When hex content is requested", func() {
			s := HexContent(b)

			c.Convey("Then the result is equal the expected string", func() {

				expected := "[0x13, 0x37, 0xDE, 0xAD, 0xBE, 0xEF, 0xCA, 0xFE, 0xBA, 0xBE, 0x13, 0x37, 0xDE, 0xAD, 0xBE, 0xEF, 0xCA, 0xFE, 0xBA, 0xBE]"
				c.So(s, c.ShouldEqual, expected)

			})
		})

	})
}
